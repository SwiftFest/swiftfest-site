-
  id: "307"
  title: "Coffee Break"
  place: "Hall"
  service: true
  description: "The best time to talk with speakers and attendees"
  speakers: []
  subtype: meta
-
  id: "503"
  title: "Lunch"
  place: "Dining room"
  description: ""
  service: true
  speakers: []
  subtype: meta
-
  id: "504"
  title: "Registrations"
  place: "Entrance"
  description: ""
  service: true
  speakers: []
  subtype: meta
-
  id: "001"
  title: "Keynote: TBA"
  description: "TBA"
  outcome: |
    - TBA
  subtype: presentation
  speakers: ["1"]
#  video: "https://video-url-goes-here"
-
  id: "002"
  title: "Keynote: Programming with Purpose"
  description: "Purpose comes in all sizes, big and small. My small purpose is to get through delivering this talk without embarrassing myself. My big purpose is to help as many people as I can in small ways every day. Notice I said small ways. Why small ways? Because the biggest moments in life tend to happen on the way to your plans. Think about the most significant moments in your life. The pivotal points that changed everything. If you’ve ever fallen in love, there’s a good chance that you never planned for it to happen on the day it did. And later... if it didn’t work out, I bet you didn’t plan that either. This is not to discount plans or goals. I firmly believe in having a plan and setting a destination before you embark on your journey. Goals are necessary. Sort of like the bread on a sandwich. The goals hold it all together but the best parts are of the the middle."
  subtype: presentation
  speakers: ["3"]
-
  id: "003"
  title: "Learn Swift"
  description: "Learn how to make an iOS app from scratch using Storyboard and the Swift language. This course is focused on building beautiful user interfaces and custom animations, elevating your product and giving you an insight into iOS development. Learn how to collaborate better with engineers and own the visual implementation of your design.

                Meng To's workshops aim to bridge the gap between design and code
                Get hands-on experience with step-by-step instructions on how to make beautiful iOS apps and Websites. Gain solid foundations needed to design from scratch, prototype quickly and bring your app ideas to life with easy-to-understand code. No coding experience required."
  outcome: |
   - TBD
  subtype: workshop
  complexity: "beginner / intermediate"
  speakers: ["12"]
-
  id: "004"
  title: "To mock ’to mockn a mockingbird’"
  description: |
    For a topic so fundamental to the practice of software engineering, designing test suites and measuring their efficacy remains difficult. For example, how does one determine the origin of a test failure in the codebase, or know if they’re designing testable components? Beyond that, what are common indicators of an over-tested codebase? Questions like these become more challenging given particular domains and applications, and usually require non-obvious testing strategies.

    To help you answer these questions, this presentation will go through the development process of a thoroughly tested audio synthesizer and demonstrate patterns and methodologies that can help you build a better test suite. By the end of the presentation, you'll have developed a toolkit for building an effective, easy-to-use, and understandable test suite.
  outcome: |
   - You will learn some of the foundations of functional programming
   - You will root the techniques of modern day functional programming in these ideas from logic
   - You will see the benefits of using a combinator approach for smoothing and describing some of the flow of logic and control in your applications
  subtype: presentation
  speakers: ["13"]
  complexity: "Intermediate"
-
  id: "005"
  title: "How to Include Machine Learning in your iOS App"
  description: "Machine learning models don’t deliver value on their own. They need to be integrated into a product to improve user experience and fulfill a business need. Fortunately, this is a particularly exciting time to include ML in your mobile apps, thanks to a wealth of new libraries and technologies in this space."
  outcome: |
   - Why you should include ML in your mobile devices
   - Architectural + technical considerations for ML on mobile
   - A walk-through of different tools for integrating ML into your iOS apps

   We will also walk through an end-to-end app example, demonstrating how Skafos ties it all together to enable enterprise-grade delivery and integration.

  subtype: presentation
  speakers: ["8"]
-
  id: "006"
  title: "The Reactive Code That Broke My Brain and Changed My Mind (just in time for Combine)"
  description: |
   After almost five years of working with ReactiveCocoa and RxSwift, I still felt like reactive (Rx) programming had limited use in my work. But with Swift and RxSwift maturing, I was looking for a way to try it more.

   This spring, a colleague and I decided to use it whole-heartedly on a project. We established some guidelines that led us to an extremely clean Model-View-ViewModel implementation with a declarative ViewController and stateless ViewModel.

   And when Apple announced Combine at WWDC this year, we were glad we did because this code will convert to SwiftUI/Combine more easily.

   To start, I’ll cover the basic ideas of Rx (RxSwift and Combine). But this talk is less about Rx operators and more about how to use Rx to build a reactive architecture.

   I’ll show some code from two apps—Trello (RxSwift) and a new workout app I’m working on (Combine).

   If you have no Rx experience, in this session I hope to show you some motivating examples that might convince you to give it a try.

   If you’re using Rx, I want to show you some techniques for using it to make MVVM structures that are more testable and easier to maintain.
  outcome: |
   - The basic ideas behind Rx that all Rx libraries share
   - The "why" for Rx style code 1) how it can be radically different from typical Objected-Oriented structures
   - How to do Model-View-ViewModel (MVVM) with Rx
     1) a stateless/pure-functional ViewModel;
     2) a more declarative View/ViewController
   - How to unit test the resulting ViewModel
  subtype: presentation
  speakers: ["7"]
-
  id: "008"
  title: "Code Golfing"
  description: |
   Code Golfing is a fun type of recreational programming where “players” strive to achieve the shortest possible source code that implements certain functionality. Using Swift to Code Golf is fun in itself, but there is a lot we can learn from this exercise. Join me in exploring practical takeaways from thinking about each line of Swift code we write!
  outcome: |
   - What is `Code Golf`.
   - Code Golfing is fun, but there is a right away and a wrong way — and the right way is really helpful.
   - Avoid the wrong way of applying a Code Golf mindset to writing code, such as “golfing” our code into something that is totally unreadable or practical like using global variables everywhere.
   - Learn the advantages of writing fewer lines of code.
   - More maintainable code and ability to do more with fewer developers — at scale, the more code we write, the more code we need to maintain. So we will inevitably end up writing more code than we can maintain.
   - Code that can be clearer.
   - Helps strengthen our Swift skills — I may touch on Code Katas here.
   - Helps to better assess dependencies. If you use a library, you get charged for every line of code. Instant losing! We should consider the complexity of our dependencies and alternatives such as copying just the lines of code that we need to perform the functionality that we need from that dependency.
   - How can we write fewer lines of code in Swift (Code Golfing).
   - Tips ranging from ternary operators, type inference, functional concepts like replacing for loops with variations of map and reducing arrays, ranges, closures, abstraction, free functions, do xib files count as code — programmatic vs interface builder UIs, etc.
   - Tests help give you a safety net to golf against.
  subtype: presentation
  complexity: "Intermediate"
  speakers: ["18"]
-
  id: "009"
  title: "Straying From the Happy Path: Taking Control of Errors in Swift"
  description: |
   Have you ever seen a code comment saying “this should never happen”? Have you ever wondered what would happen if it did? Swift has a diverse set of error-handling capabilities, from using `throw` to send errors up the stack to using a `Result` to handle errors in asynchronous methods. In this talk, we’ll look at the landscape of handling errors in Swift, create new ways of expressing and handling them, and show how even the most impossible code-level situations can have 100% test coverage.
  outcome: |
   Spanning the history of error handling from Objective-C to Combine and SwiftUI, this talk will help you better handle errors in your code, test error-handling code paths, and log errors easily and conveniently. You’ll understand not only how to achieve test coverage of your code’s error paths, but also which tests are important to write to understand your error paths.
  subtype: presentation
  complexity: "Advanced"
  speakers: ["14"]
-
  id: "013"
  title: "To the Core of Core NFC"
  description: |
   NFC has been around for a while and we use it every day in things like Apple Pay but how does it work and what features are actually available for developers to use? Until recently NFC was pretty limited on iOS and devs used to struggle to find use cases they could implement in their apps. NFC itself has plenty of applications but we were not able to take full advantage of them because of these limitations but now that Apple has announced tag writing support, the game completely changes. Some of your Android friends might tell you: “Well we have had that for a long time!” and yeah it’s true, but without Apple opening their APIs it was hard for companies to find a compelling case to build apps where only one platform was going to be supported.


   In this talk, you will learn the basics of Near Field Communication such as tagging, different technologies, and specifications. We will also take a peak to these new features and implement some of them in a quick example and other possible applications.


   Join me to see why I think learning about the new Core NFC features are important and the long-lasting implications they will have around the world.

  outcome: |
   - Basics of Near Field communication and tagging, what is NFC? NDEF and the new supported specifications.
   - Basics of the new Core NFC features and an example of using these features to learn read and write from a tag.
   - The importance of the latest announcements and why these will have long-lasting implications around the world. Countries like Japan and Germany are already thinking to use this technology to convert their national IDs.
  subtype: presentation
  speakers: ["25"]
  complexity: "Intermediate"
-
  id: "015"
  title: "Don't Join a Cult. Learn Mindfulness."
  description: |
   Perfectionism. Fear. Guilt. Self-Doubt. These tricky demons can shatter our productivity, silence our best ideas, and block us from our greatest potential. Take back the reins and discover what you’re really capable of. In this talk, you’ll learn the basics of mindfulness through true stories of reptilian cults, imprisoned stalkers, and a very unusual dinner guest.
  outcome: |
   - The basics of mindfulness and non-judgmental observation
   - Introspective tools for becoming comfortable with discomfort
   - How to not join a cult
  subtype: presentation
  description: ""
  speakers: ["26"]
-
  id: "014"
  title: "Testing. Testing. One. Two."
  description: |
   Testing is critical, but can be difficult. In this talk we will explore using Swift’s protocol oriented programming for User Interface testing to create light-weight interfaces that are composed of user behavior and application state. We will discuss the pro’s and con’s of writing tests this way. We will also discuss options for further development of the technique. This talk isn’t just for testers. This talk is also for product managers, designers, developers, and customers! As a use case, will will walk through logging into and using a movie rating app. We will build up a protocol that allows tests to be read as a set of instructions for an actual user. When we are done, we will have a better understanding of behavior driven development, UI testing, and protocol oriented programming in Swift.
  outcome: |
    - A history of testing (the boring stuff)… Agile, Test Driven Development, and Behavior Driven Development
    -  Swift Protocol Oriented Programming for UI Testing.. Behavior, State and the conversation
    -  Making it work together... An example
    -  Learn something… How does this help the conversation
  subtype: presentation
  complexity: "Intermediate"
  speakers: ["22"]
-
  id: "018"
  title: "The unreasonable effectiveness and power of VPNs in iOS and other short stories"
  description: |
    TBA
  outcome: |
    TBA
  subtype: presentation
  speakers: ["11"]
-
  id: "019"
  title: "What Happens When iOS Turns Against You"
  description: |
   Follow me on a journey of peril and intrigue as I walk you through the most difficult bug of my career. The many frameworks of Cocoa Touch are the cornerstone of modern iOS apps. But what happens when the building blocks start to work against you? I'll take you through the lifecycle of a bug we encountered at Tinder on the eve of the launch of iOS 12. To this day, it is one of the most puzzling and challenging issues I've encountered. The solution to which has wide-ranging implications in any app that utilizes NSUserDefaults. At the end of this session, you will learn steps you can take to avoid a devastating pitfall in Foundation. This issue was discovered in Tinder and I will walk you through a possible solution should you encounter it in your own apps as well.
  outcome: |
   Attendees should expect to walk away with an understanding of the deeper workings of UserDefaults and unexpected, yet commonly experienced, issues with the defaults system.
  subtype: presentation
  speakers: ["24"]
  complexity: "Intermediate"
-
  id: "020"
  title: "Protocol Oriented Programming"
  description: |
   They said Swift is “protocol oriented,” so you wrote protocols. But you wanted them to be generic, so you added associated types. But your collections broke, so you added type-erasers. But your “as”-casts broke, so you switched to Any. But then everything broke, so you read about Mirror. And the tears began. Why did it have to be so hard to make an array?

   It doesn’t have to be so hard. But it’s very easy to use the wrong tools to solve the wrong problems. In this session I’ll help you reevaluate what it means to write generic Swift and how to choose the right tools for the job. Whether your goal is reusable view controllers, flexible networking, data-driven UI, effective unit testing, or just the joy of elegant data structures, you’ll learn how to work with Swift and not fight the compiler.

   This talk assumes familiarity with Swift syntax for generics, protocols, extensions, enums, and first-class functions (such as completion handlers), as well as the basic differences between Swift structs and classes. More advanced topics, including protocols with associated types, enums with associated data, closures, and functions as return types, will be introduced and explained.
  outcome: |
    Attendees will learn how to develop generic and reusable code in Swift, starting from concrete implementations and finding the abstractions within. They will learn the vocabulary of generics, including existentials and the many kinds of type erasure. Finally, they will learn the many tools of generic Swift, including protocols, associated types, and generic structs, but also generic functions and most importantly composition of types and functions to make their code more flexible without making it more complex.
  subtype: presentation
  complexity: "Advanced"
  speakers: ["6"]
-
  id: "021"
  title: "Empowering Your Ecosystem"
  description: |
   The ecosystem of the Swift programming language is at an interesting inflection point. David will talk about his take on some ways forward, as well as how to embrace the opportunity it has to push Swift’s footprint on the software development world into the stratosphere.
  outcome: |
    - How other software communities operate and contribute to open source
    - The key differences between Swift and other communities that makes this inflection point different
    - How you can create Swift packages today for any platform to boost the community
  subtype: presentation
  complexity: "Intermediate"
  speakers: ["5"]
-
  id: "023"
  title: "Bringing Robinhood Ticker to Tinder"
  description: |
   Tinder's famous LikesYou feature has a golden pill view that shows the number of swipe rights a particular user receives while using the app. Inspired by Robinhood's stock ticker, Tinder has recently upgraded their pill view to have similar sweet scrolling animation. However, since the pill view had letters along with digits, it faced different set of problems. The session will explain how this unique ticker view has been implemented.Through this talk, you will be able to understand what it takes to implement a tickerView like the one from Robinhood and how Tinder has solved the unique set of challenges due to implementing scrolling digits and letters in a single view.
  outcome: |
    At the end of this session, you will be able to create a ticker view just like the one from Robinhood and understand how Tinder solved its unique set of problems due to scrolling digits and letters with localization within the same view.
  subtype: presentation
  complexity: "intermediate"
  speakers: ["23"]
-
  id: "024"
  title: "Voiceover On..."
  description: |
   In a world obsessed with user experience, how much are we thinking about the experience we provide for our visually impaired users? I’ve always strived to make my apps accessible, but merely providing access isn't enough. We should be aspiring to provide an exceptional experience for everyone. I wanted to understand what makes for truly great accessible design, so I turned VoiceOver on for a week...

    In this talk, I’ll share the findings of my experiment. We'll discover the good and bad patterns in commonly-used apps, see what separates the fantastic from the frustrating, and learn about what you can do today to bridge some of the common UX gaps.
  outcome: |
   Attendees should expect to walk away with an understanding of how they can make their apps more accessible for visually impaired users. They will learn what small code changes to make to improve their apps significantly, what VoiceOver Rotor is and they can leverage it to provide a spectacular experience for their VoiceOver users. Attendees will also, hopefully, walk away with a different perspective when thinking about accessibility.
  subtype: presentation
  complexity: "Intermediate"
  speakers: ["20"]
-
  id: "025"
  title: "Talk to be announced"
  description: |
    TBA
  outcome: |
    TBA
  subtype: presentation
  complexity: "intermediate"
  speakers: ["21"]
-
  id: "026"
  title: "Encoding and Decoding in Swift"
  description: |
   Ever wonder what’s actually going on inside JSONEncoder and JSONDecoder? Why doesn't JSONEncoder conform to the Encoder protocol? What's a CodingKey, and what are all of those "containers" for?
   This talk will be a deep dive into encoding and decoding in Swift: what all of the related protocols are, how they fit together, and how to use them. You will come away from this talk ready to customize how your Swift types are encoded and decoded, and with the knowledge necessary to start writing encoders and decoders of your own.
  outcome: |
   - You will learn how to highly customize how your Swift types are encoded and decoded, and how standard library encoder and decoders work under the hood
   - You will gain the necessary background knowledge to even write encoders and decoders of your own

  subtype: presentation
  complexity: "advanced"
  speakers: ["15"]
-
  id: "027"
  title: "You Belong With Me: An Extension Love Story"
  description: |
    Extensions allow you to add functionality to a previously existing class, structure, enumeration, or protocol. This gives you the power to add new behavior to your own code, third-party libraries, and even Apple frameworks.  While this sounds simple, extensions allow you to up your Swift game and amplify your code in so many ways!  In this talk, we will explore using extensions to have cleaner code, conform to protocols, add new initializers, extend protocols, and so much more.  We’ll also show off some extensions that you didn’t even know that you wanted.  Fall in love with extensions today!
  outcome: |
   - What extensions are and how to add them to your code
   - How to use extensions for cleaner code and conforming to protocols
   - How to use extensions to add a new initializer to a class
   - How to use an extension to add methods to a protocol
   - Fun places to add convenience methods
  subtype: presentation
  complexity: "intermediate"
  speakers: ["9"]
-
  id: "028"
  title: "Recognize text, facial features, and objects in images with ML Kit for Firebase (1.5h)"
  description: ""
  subtype: workshop
  complexity: "intermediate"
  speakers: ["10"]
-
  id: "029"
  title: "Accessibility -> Up to 11!"
  description: |
    Let’s go together on a journey to not just create accessible apps, but awesome experiences that absolutely all your users will be able to use and love. How to deal with Dynamic Types and Auto Layout so your UI adapts to any font size the user may prefer; What happens with those hidden actions, which are unveiled with a gesture, when using the app with VoiceOver; What to do when the user wants inverted colors, or reduce motion, or reduce transparency…? Do you know what the Rotor is and what it is used for? And we’ll have to test all this! Let’s find out how.

    It is time to bring the accessibility levels of your app up to eleven!
  outcome: |
   - UIAccessibility & VoiceOver: from zero to pro
   - How Adaptive User Interfaces with Dynamic types & Large Content Viewer works
   - And more: Smart Inverted Colours, Voice Control, Switch Control, etc.
  subtype: presentation
  complexity: "Beginner"
  speakers: ["27"]
-
  id: "030"
  title: "Splitting Views - The Nitty-Gritty of Container View Controllers"
  description: |
    When does a `UIView` need a `UIViewController`? The most common answer is to keep one VC per-screen, but the benefits of a ViewController can be felt by any view of any size. In this talk we will take a look at how and why to use Container View Controllers in your apps and discuss best practices and tips for keeping things manageable no matter how many ViewControllers are on screen.
  outcome: |
   - Be familiar with Container View Controllers
   - Know how to set up Container View Controllers programmatically and in Interface Builder
   - Have formed opinions about what Views would benefit from VCs in their apps
   - Identify best practices around managing Container View Controllers"
  subtype: presentation
  complexity: "Beginner"
  speakers: ["28"]
-
  id: "031"
  title: "SwiftUI: Declarative UI development for the modern era"
  description: |
    This talk will introduce the new SwiftUI framework and will provide an overview of how it is used to declaratively build user interfaces across all of the Apple platforms. Emphasis will be given on how user-interface code can be shared between platforms, from the smallest watchOS, through iPhoneOS/iPadOS, and up to macOS & tvOS.
  outcome: |
    The attendees will have enough knowledge to start developing apps using the SwiftUI framework.
  subtype: presentation
  complexity: "Beginner"
  speakers: ["29"]

-
  id: "033"
  title: "Free Cocoa: hack mobile app and skim the cream"
  description: |
    With a set of few simple tools and a bit of enthusiasm, mobile app binary can be read like an open book. My presentation describes practical attack on an iOS app. Realizing how easy the attack can be, is the first step to improve security of your apps.
  outcome: |
   - What is https eavesdropping with mitmproxy
   - How to securing https with ssl-pinning
   - How to decompiling app using Hopper
   - How to securing the app with MachObfuscator
  subtype: presentation
  complexity: "Intermediate"
  speakers: ["30"]

-
  id: "034"
  title: "Remote Connections: Fostering Relationships in Distributed Teams"
  description: |
    It takes more than good internet to be connected to your team when you're working remotely. When you don't share a physical space with your colleagues, you miss out on interpersonal connections which otherwise come for free. This session will cover why these connections are important, and how you and your organization can work to build them.
  outcome: |
   - An appreciation for the benefits of good rapport among colleagues
   - An understanding of potential gaps in communication with their distributed colleagues
   - Concrete ways to build stronger working relationships in distributed and partially-distributed organizations
  subtype: presentation
  complexity: "Beginner"
  speakers: ["31"]
-
  id: "035"
  title: "How We Scaled App Development at Wayfair with 100+ app developers"
  description: |
    App development is inherently hard at scale.  On one side, app developers have to create new features that users can use, which in turn helps the business make money. On the other side, app developers need to keep apps fast, consistent, fluid, fun, modular and everything users expect any app to be.  A small app team can do both at once, but as the team scales, keeping focus on these two things equally in a connected way is actually hard, especially at Wayfair with over a hundred app developers and multiple apps across iOS and Android and business areas.  Come listen to our journey so you can learn from how we organized app teams to scale to new heights in order to deliver successful “appy” apps!
  outcome: |
   - The challenges of app development at scale
   - Why a good organization model is important especially at scale
   - Some organization models to support app development at scale
   - The steps to get started with your scaling process
  subtype: presentation
  complexity: "Beginner"
  speakers: ["32"]
-
  id: "036"
  title: "Going one step further into ARKit with CoreML and Turi Create"
  description: |
    ARKit itself seems to have very limited functionalities. However, I extended what ARKit can do with CoreML when I developed my first AR app, Notable Me(https://itunes.apple.com/kr/app/notable-me/id1453810473?l=en&mt=8). It got featured on ProductHunt(https://www.producthunt.com/posts/notable-me). I will share how I developed this AR app, so other iOS developers can also come up with creative ideas to use ARKit and CoreML. Also, I will share how a mobile developer, who doesn't know how to use Tensorflow, can create custom ML models using Turi Create, Apple's open source library to easily create mlmodels.
  outcome: |
   TBA
  subtype: presentation
  complexity: "Intermediate"
  speakers: ["33"]
-
  id: "032"
  title: "Keynote: Make room for all, not war!: Inclusion means all y'all"
  description: |
   After 18 years of ups and downs in the tech industry, Diana Rodriguez has seen good, bad and ugly. Leading worldwide community organisation for a non-profit has been an interesting experience where she found herself advocating for the exact same things she had to stand up for 18 years ago. In a sincere and honest talk about diversity, inclusion and evolution in the tech ecosystem, this isn't a SJW rant. It's an account of the mishaps of a woman in tech who decided to make a difference.
   (what do you reckon?)
  subtype: presentation
  speakers: ["2"]
-
  id: "999"
  title: "Talk to be announced"
  description: "More speakers coming soon!"
  subtype: presentation
  speakers: []
-
  id: "998"
  title: "Workshop to be announced"
  description: "More speakers coming soon!"
  subtype: presentation
  speakers: []

-
  id: "1511"
  title: "The workshop continues…"
  description: "Each workshop is at least 90 minutes"
  subtype: meta
  speakers: []
-
  id: "1512"
  title: "The workshop ends…"
  description: "Each workshop is at least 90 minutes"
  subtype: meta
  speakers: []
-
  id: "666"
  title: ""
  description: "No talk or workshop in this time slot."
  subtype: meta
  speakers: []
-
  id: "888"
  title: "Opening Remarks"
  description: "Welcome to SwiftFest! Start the day with a few opening remarks and announcements from Giorgio Natili, SwiftFest team lead."
  subtype: meta
  speakers: []
